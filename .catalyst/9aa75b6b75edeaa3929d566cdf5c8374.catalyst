{"title":"A. Keanu Reeves","contestId":"1189","problemIndex":"A","timeLimit":"1 second","memLimit":"256 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p>After playing Neo in the legendary &quot;<span class=\"tex-font-style-tt\">Matrix</span>&quot; trilogy, Keanu Reeves started doubting himself: maybe we really live in virtual reality? To find if this is true, he needs to solve the following problem.</p><p>Let&apos;s call a string consisting of only zeroes and ones <span class=\"tex-font-style-bf\">good</span> if it contains <span class=\"tex-font-style-bf\">different</span> numbers of zeroes and ones. For example, <span class=\"tex-font-style-tt\">1</span>, <span class=\"tex-font-style-tt\">101</span>, <span class=\"tex-font-style-tt\">0000</span> are good, while <span class=\"tex-font-style-tt\">01</span>, <span class=\"tex-font-style-tt\">1001</span>, and <span class=\"tex-font-style-tt\">111000</span> are not good.</p><p>We are given a string $$$s$$$ of length $$$n$$$ consisting of only zeroes and ones. We need to cut $$$s$$$ into <span class=\"tex-font-style-bf\">minimal possible</span> number of substrings $$$s_1, s_2, \\ldots, s_k$$$ such that <span class=\"tex-font-style-bf\">all</span> of them are good. More formally, we have to find <span class=\"tex-font-style-bf\">minimal</span> by number of strings sequence of good strings $$$s_1, s_2, \\ldots, s_k$$$ such that their concatenation (joining) equals $$$s$$$, i.e. $$$s_1 + s_2 + \\dots + s_k = s$$$.</p><p>For example, cuttings <span class=\"tex-font-style-tt\">110010</span> into <span class=\"tex-font-style-tt\">110</span> and <span class=\"tex-font-style-tt\">010</span> or into <span class=\"tex-font-style-tt\">11</span> and <span class=\"tex-font-style-tt\">0010</span> are valid, as <span class=\"tex-font-style-tt\">110</span>, <span class=\"tex-font-style-tt\">010</span>, <span class=\"tex-font-style-tt\">11</span>, <span class=\"tex-font-style-tt\">0010</span> are all good, and we can&apos;t cut <span class=\"tex-font-style-tt\">110010</span> to the smaller number of substrings as <span class=\"tex-font-style-tt\">110010</span> isn&apos;t good itself. At the same time, cutting of <span class=\"tex-font-style-tt\">110010</span> into <span class=\"tex-font-style-tt\">1100</span> and <span class=\"tex-font-style-tt\">10</span> isn&apos;t valid as both strings aren&apos;t good. Also, cutting of <span class=\"tex-font-style-tt\">110010</span> into <span class=\"tex-font-style-tt\">1</span>, <span class=\"tex-font-style-tt\">1</span>, <span class=\"tex-font-style-tt\">0010</span> isn&apos;t valid, as it isn&apos;t minimal, even though all $$$3$$$ strings are good.</p><p>Can you help Keanu? We can show that the solution always exists. If there are multiple optimal answers, print any.</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>The first line of the input contains a single integer $$$n$$$ ($$$1\\le n \\le 100$$$)&#xA0;&#x2014; the length of the string $$$s$$$.</p><p>The second line contains the string $$$s$$$ of length $$$n$$$ consisting only from zeros and ones.</p>","outSpecsHtml":"<div class=\"section-title\">Output</div><p>In the first line, output a single integer $$$k$$$ ($$$1\\le k$$$)&#xA0;&#x2014; a <span class=\"tex-font-style-bf\">minimal</span> number of strings you have cut $$$s$$$ into.</p><p>In the second line, output $$$k$$$ strings $$$s_1, s_2, \\ldots, s_k$$$ separated with spaces. The length of each string has to be positive. Their concatenation has to be equal to $$$s$$$ and all of them have to be good.</p><p>If there are multiple answers, print any.</p>","noteHtml":"<div class=\"section-title\">Note</div><p>In the first example, the string <span class=\"tex-font-style-tt\">1</span> wasn&apos;t cut at all. As it is good, the condition is satisfied.</p><p>In the second example, <span class=\"tex-font-style-tt\">1</span> and <span class=\"tex-font-style-tt\">0</span> both are good. As <span class=\"tex-font-style-tt\">10</span> isn&apos;t good, the answer is indeed minimal.</p><p>In the third example, <span class=\"tex-font-style-tt\">100</span> and <span class=\"tex-font-style-tt\">011</span> both are good. As <span class=\"tex-font-style-tt\">100011</span> isn&apos;t good, the answer is indeed minimal.</p>","sampleTestcases":[{"id":1619339874500,"input":"1\n1\n","output":"1\n1","result":{"id":1619339874500,"stdout":"1\r\n1","stderr":"","exitcode":0,"signal":null,"time":18,"timeout":false}},{"id":1619339874501,"input":"2\n10\n","output":"2\n1 0","result":{"id":1619339874501,"stdout":"2\r\n1 0","stderr":"","exitcode":0,"signal":null,"time":19,"timeout":false}},{"id":1619339874502,"input":"6\n100011","output":"2\n100 011\n","result":{"id":1619339874502,"stdout":"2\r\n1 00011","stderr":"","exitcode":0,"signal":null,"time":18,"timeout":false}}],"submitUrl":"https://codeforces.com/problemset/submit","language":"c++"}